{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","join","filter","element","defaultProps","aboutText","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1f9b8486.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n         {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n           {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>*/}\r\n          </ul>\r\n          {/*<form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form>*/}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Set title here',\r\n  aboutText: 'About'\r\n};\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text )\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\",\"success\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text )\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\",\"success\");\r\n        }\r\n    \r\n    const handleClearClick = ()=>{\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"success\");\r\n    } \r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        document.getSelection().removeAllRanges();\r\n        props.showAlert(\"Copied to Cliboard\",\"success\");\r\n        props.showAlert(\"Coppied to Clipboard!\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\",\"success\");\r\n\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\"  style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1 className='mb-4'>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value = {text} onChange={handleOnChange}style={{backgroundColor: props. mode==='dark'?'#13466e':'white',color: props.mode==='dark'?'white':'#042743'}}id=\"myBox\" rows=\"8\"></textarea>\r\n            </div> \r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text </button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0}className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p> \r\n            <p>{0.008* text.split(\" \").filter((element)=>{return element.length!==0}).length}Minutes read</p> \r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Nothing to Preview!\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )   \r\n\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n \r\n    return (\r\n        <div style={{height :'50px'}}>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\r\n//import About from './components/About';\r\nimport Navbar from './components/Navbar';\r\nimport TextForm from './components/TextForm';\r\nimport React, { useState } from 'react';\r\nimport Alert from './components/Alert';\r\n// import {\r\n//  BrowserRouter as Router,\r\n//  Switch,\r\n//  Route\r\n// } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mode, setMode] = useState('light'); // Wheather dark mode is enable or not\r\n  const [alert, setAlert] = useState(null);\r\n\r\n  const showAlert= (message, type) =>{\r\n      setAlert({\r\n        msg: message,\r\n        type: type\r\n      })\r\n      setTimeout(() => {\r\n        setAlert(null);\r\n      }, 1500);\r\n  }\r\n  const toggleMode = () =>{\r\n    if(mode === \"light\"){\r\n      setMode(\"dark\");\r\n      document.body.style.backgroundColor = \"#042743\";\r\n      showAlert(\"Dark mode has been enabled\",\"success\");\r\n      //document.title = 'TextUtils - Dark Mode';\r\n    }\r\n    else{\r\n      setMode(\"light\");\r\n      document.body.style.backgroundColor = \"white\";\r\n      showAlert(\"Light mode has been enabled\",\"success\");\r\n      //document.title = 'TextUtils - Light Mode';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n    {/*<Router>*/}\r\n    <Navbar title=\"TexUtiles\" mode={mode} toggleMode={toggleMode}/>\r\n    <Alert alert={alert}/>\r\n    <div className=\"container my-3\">\r\n    {/*<Switch>*/}\r\n          {/*<Route exact path=\"/about\">\r\n            <About/>\r\n          </Route>*/}\r\n          {/*<Route exact path=\"/\">*/}\r\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra spaces\" mode={mode}/>\r\n          {/*</Route>*/}\r\n    {/*</Switch>*/}\r\n    </div>\r\n    {/*</Router>*/}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}