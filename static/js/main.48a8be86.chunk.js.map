{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","setSelectionRange","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capatalize","msg","App","setMode","setAlert","message","setTimeout","body","aboutText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.48a8be86.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n//import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n         {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>*/}\r\n          <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/*<Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>*/}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n\r\n            </li>\r\n           {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>*/}\r\n          </ul>\r\n          {/*<form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n          </form>*/}\r\n          <div className={`form-check form-switch text-${props.mode===\"light\"?'dark':'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string.isRequired\r\n}\r\n\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text )\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to uppercase\",\"sucess\");\r\n    }\r\n    const handleLoClick = ()=>{\r\n        // console.log(\"Uppercase was clicked\" + text )\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to lowercase\",\"sucess\");\r\n        }\r\n    \r\n    const handleClearClick = ()=>{\r\n        let newText= '';\r\n        setText(newText);\r\n        props.showAlert(\"Text Cleared\",\"sucess\");\r\n    } \r\n    \r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n        \r\n    }\r\n\r\n    const handleCopy = () => {\r\n        var text = document.getElementById(\"myBox\");\r\n        text.select();\r\n        text.setSelectionRange(0,9999);\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied to Cliboard\",\"sucess\");\r\n        props.showAlert(\"Coppied to Clipboard!\",\"sucess\");\r\n    }\r\n\r\n    const handleExtraSpaces = () => {\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Spaces Removed\",\"sucess\");\r\n\r\n    }\r\n\r\n\r\n    const [text, setText] = useState('');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\"  style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n            <textarea className=\"form-control\" value = {text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'light',color: props.mode==='dark'?'white':'#042743'}}id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleLoClick}>Convert to Lowercase</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleClearClick}>Clear Text </button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n\r\n        </div>\r\n        <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'#042743'}}>\r\n            <h2>Your text summary</h2>\r\n            <p>{text.split(\" \").length} words and {text.length} characters</p> \r\n            <p>{0.008* text.split(\" \").length }Minutes read</p> \r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n\r\n        </div>\r\n        </>\r\n    )   \r\n\r\n}","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capatalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n \r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type}alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capatalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n//import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//  BrowserRouter as Router,\n//  Switch,\n//  Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light'); // Wheather dark mode is enable or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert= (message, type) =>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n        setAlert(null);\n      }, 1500);\n  }\n  const toggleMode = () =>{\n    if(mode === \"light\"){\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enabled\",\"success\");\n    }\n    else{\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\",\"success\");\n    }\n  }\n\n  return (\n    <>\n    {/*<Router>*/}\n    <Navbar title=\"TexUtiles\" mode={mode} toggleMode={toggleMode} aboutText=\"About\"/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/*<Switch>*/}\n          {/*<Route exact path=\"/about\">\n            <About/>\n          </Route>*/}\n          {/*<Route exact path=\"/\">*/}\n            <TextForm showAlert={showAlert} heading=\"Enter the text to analyse below\" mode={mode}/>\n          {/*</Route>*/}\n    {/*</Switch>*/}\n    </div>\n    {/*</Router>*/}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}